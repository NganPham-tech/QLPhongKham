
@model List<QLPhongKham.ViewModels.UserRoleViewModel>
@{
    ViewData["Title"] = "Quản lý người dùng";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3 mb-0 text-gray-800">
            <i class="bi bi-people-fill me-2"></i>Quản lý người dùng
        </h1>
        <div>
            <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#createStaffModal">
                <i class="bi bi-person-plus"></i> Tạo tài khoản nhân viên
            </button>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-primary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                Tổng người dùng
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.Count</div>
                        </div>
                        <div class="col-auto">
                            <i class="bi bi-people fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                Bác sĩ
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">
                                @Model.Count(u => u.Roles.Contains("BacSi"))
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="bi bi-person-badge fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-info shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                                Nhân viên
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">
                                @Model.Count(u => u.Roles.Contains("NhanVien"))
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="bi bi-person-gear fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-warning shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                Bệnh nhân
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">
                                @Model.Count(u => u.Roles.Contains("BenhNhan"))
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="bi bi-person-heart fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Users Table -->
    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
            <h6 class="m-0 font-weight-bold text-primary">Danh sách người dùng</h6>
            <div class="input-group" style="max-width: 300px;">
                <input type="text" class="form-control" id="searchInput" placeholder="Tìm kiếm user...">
                <button class="btn btn-outline-secondary" type="button">
                    <i class="bi bi-search"></i>
                </button>
            </div>
        </div>
        <div class="card-body">
            @if (Model != null && Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-bordered" id="userTable" width="100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>Email</th>
                                <th>Tên đăng nhập</th>
                                <th>Vai trò</th>
                                <th>Trạng thái</th>
                                <th>Thao tác</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var userRole in Model)
                            {
                                <tr>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="avatar-circle me-2">
                                                @userRole.User.Email?.Substring(0, 1).ToUpper()
                                            </div>
                                            @userRole.User.Email
                                        </div>
                                    </td>
                                    <td>@userRole.User.UserName</td>
                                    <td>
                                        @if (userRole.Roles != null && userRole.Roles.Any())
                                        {
                                            foreach (var role in userRole.Roles)
                                            {
                                                <span class="badge me-1 @GetRoleBadgeClass(role)">@GetRoleDisplayName(role)</span>
                                            }
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">Chưa có quyền</span>
                                        }
                                    </td>
                                    <td>
                                        @if (userRole.User.EmailConfirmed)
                                        {
                                            <span class="badge bg-success">
                                                <i class="bi bi-check-circle me-1"></i>Đã xác thực
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-warning">
                                                <i class="bi bi-exclamation-triangle me-1"></i>Chưa xác thực
                                            </span>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a asp-action="AssignRole" asp-route-userId="@userRole.User.Id"
                                               class="btn btn-sm btn-outline-primary" title="Phân quyền">
                                                <i class="bi bi-key"></i>
                                            </a>
                                            <button class="btn btn-sm btn-outline-info"
                                                    onclick="viewUserDetails('@userRole.User.Id')" title="Xem chi tiết">
                                                <i class="bi bi-eye"></i>
                                            </button>
                                            @if (userRole.Roles != null && !userRole.Roles.Contains("Admin"))
                                            {                                                <button class="btn btn-sm btn-outline-danger"
                                                        onclick="confirmDelete('@userRole.User.Id', '@(userRole.User.Email ?? "Unknown")')" title="Xóa">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="bi bi-people fa-3x text-gray-300 mb-3"></i>
                    <p class="text-muted">Không có người dùng nào trong hệ thống</p>
                </div>
            }
        </div>
    </div>
</div>

<!-- Create Staff Modal -->
<div class="modal fade" id="createStaffModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Tạo tài khoản nhân viên mới</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p class="text-muted mb-3">
                    <i class="bi bi-info-circle me-2"></i>
                    Tạo tài khoản trực tiếp cho bác sĩ hoặc nhân viên
                </p>
                <div class="alert alert-info">
                    <strong>Lưu ý:</strong> Hiện tại chưa có form tạo. Bạn có thể:
                    <ul class="mb-0 mt-2">
                        <li>Yêu cầu người dùng đăng ký qua trang Register</li>
                        <li>Sau đó vào đây phân quyền cho họ</li>
                    </ul>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <a href="/Register" target="_blank" class="btn btn-primary">
                    <i class="bi bi-box-arrow-up-right me-2"></i>Mở trang đăng ký
                </a>
            </div>
        </div>
    </div>
</div>

@{
    string GetRoleBadgeClass(string role)
    {
        return role switch
        {
            "Admin" => "bg-danger",
            "BacSi" => "bg-success",
            "NhanVien" => "bg-info",
            "BenhNhan" => "bg-warning",
            _ => "bg-secondary"
        };
    }

    string GetRoleDisplayName(string role)
    {
        return role switch
        {
            "Admin" => "Quản trị",
            "BacSi" => "Bác sĩ",
            "NhanVien" => "Nhân viên",
            "BenhNhan" => "Bệnh nhân",
            _ => role
        };
    }
}

<style>
    .border-left-primary {
        border-left: 0.25rem solid #4e73df !important;
    }

    .border-left-success {
        border-left: 0.25rem solid #1cc88a !important;
    }

    .border-left-info {
        border-left: 0.25rem solid #36b9cc !important;
    }

    .border-left-warning {
        border-left: 0.25rem solid #f6c23e !important;
    }

    .text-gray-800 {
        color: #5a5c69 !important;
    }

    .text-gray-300 {
        color: #dddfeb !important;
    }

    .avatar-circle {
        width: 32px;
        height: 32px;
        border-radius: 50%;
        background-color: #4e73df;
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        font-size: 14px;
    }
</style>

<script>
    // Search functionality
    document.getElementById('searchInput').addEventListener('keyup', function() {
        var filter = this.value.toLowerCase();
        var rows = document.querySelectorAll('#userTable tbody tr');

        rows.forEach(function(row) {
            var email = row.cells[0].textContent.toLowerCase();
            var username = row.cells[1].textContent.toLowerCase();
            var roles = row.cells[2].textContent.toLowerCase();

            if (email.includes(filter) || username.includes(filter) || roles.includes(filter)) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
    });

    function viewUserDetails(userId) {
        // Implement user details modal or redirect
        alert('Chức năng xem chi tiết user sẽ được thêm sau');
    }

    function confirmDelete(userId, email) {
        if (confirm(`Bạn có chắc chắn muốn xóa người dùng "${email}"?`)) {
            // Implement delete functionality
            alert('Chức năng xóa user sẽ được thêm sau');
        }
    }
</script>